* {
	box-sizing: border-box;
	margin: 0;
	padding: 0;
}

body {
	font-family: Arial, sans-serif;
	background-color: #f5f7fa;
	padding: 20px;
}

.task-input-container {
	max-width: 1200px;
	margin: 0 auto 20px;
	display: flex;
	gap: 10px;
}

#new-task-input {
	flex: 1;
	padding: 10px 12px;
	border: 1px solid #ddd;
	border-radius: 4px;
	font-size: 14px;
}

#column-select {
	padding: 10px 12px;
	border: 1px solid #ddd;
	border-radius: 4px;
	font-size: 14px;
	background-color: white;
	color: #172b4d;
	min-width: 140px;
}

#add-task-btn {
	padding: 10px 16px;
	background-color: #0079bf;
	color: white;
	border: none;
	border-radius: 4px;
	cursor: pointer;
	font-weight: bold;
	transition: background-color 0.2s;
}

#add-task-btn:hover {
	background-color: #026aa7;
}

.container {
	display: flex;
	justify-content: flex-start;
	gap: 20px;
	max-width: 1200px;
	margin: 0 auto;
	overflow-x: auto;
	padding: 0 20px 16px;
	scroll-behavior: smooth;
	height: calc(100vh - 100px); /* Full height minus header space */
	align-items: stretch;
}

.column {
	flex: 0 0 280px; /* Fixed width for columns */
	background-color: #ebecf0;
	border-radius: 8px;
	padding: 12px;
	min-width: 280px;
	max-width: 280px;
	height: 100%;
	display: flex;
	flex-direction: column;
	gap: 12px;
}

.column h2 {
	font-size: 16px;
	margin-bottom: 12px;
	color: #172b4d;
}

.virtual-scroll-container {
	position: relative;
	flex: 1;
	overflow-y: auto;
	overflow-x: hidden;
	border-radius: 4px;
	height: 100%;
	scroll-behavior: smooth;
	background-color: rgba(255, 255, 255, 0.1);
	scrollbar-width: thin;
	scrollbar-color: rgba(0, 121, 191, 0.5) transparent;
	z-index: 0; /* Ensure proper stacking context */
}

.virtual-scroll-container::-webkit-scrollbar {
	width: 6px;
}

.virtual-scroll-container::-webkit-scrollbar-track {
	background: transparent;
}

.virtual-scroll-container::-webkit-scrollbar-thumb {
	background-color: rgba(0, 121, 191, 0.5);
	border-radius: 3px;
}

.scroll-content {
	position: absolute;
	width: 100%;
	pointer-events: none;
	top: 0;
	left: 0;
	z-index: 0; /* Ensure proper stacking context */
}

.droppable-list {
	padding: 4px;
	border-radius: 4px;
	position: relative; /* Changed from absolute to relative */
	width: 100%;
	min-height: 100px; /* Add a minimum height so empty columns are visible */
	background-color: transparent;
	transition: background-color 0.2s ease;
	z-index: 1; /* Ensure proper stacking context */
}

/* Source column highlighting (where the item is being dragged from) */
.droppable-list.source-highlight {
	background-color: rgba(224, 243, 255, 0.3);
	border: 2px dashed rgba(0, 121, 191, 0.3);
}

/* Target column highlighting (where the item can be dropped) */
.droppable-list.target-highlight {
	background-color: #e0f3ff;
	border: 2px dashed #0079bf;
}

/* Add a visual indicator for dropping at the end of a list (only for target columns) */
.droppable-list.target-highlight::after {
	content: '';
	display: block;
	height: 44px; /* Same height as a typical item */
	width: calc(100% - 8px);
	margin: 4px;
	border-radius: 4px;
	background-color: rgba(0, 121, 191, 0.1);
	border: 2px dashed #0079bf;
	position: relative;
	align-self: center;
}

.droppable-list.active-highlight {
	background-color: #b3e0ff;
	border: 2px solid #0079bf;
	transition: all 0.2s ease;
}

.droppable-list.active-highlight::after {
	background-color: rgba(0, 121, 191, 0.2);
	border: 2px solid #0079bf;
}

/* Placeholder styling */
.drop-placeholder {
	background-color: rgba(0, 120, 215, 0.2);
	border: 2px dashed rgba(0, 120, 215, 0.5);
	border-radius: 4px;
	margin: 4px;
	width: calc(100% - 8px);
	animation: pulse 1.5s infinite;
}

.draggable-item {
	padding: 12px;
	background-color: white;
	border-radius: 4px;
	box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);
	cursor: grab;
	user-select: none; /* Prevent accidental text selection on drag */
	transition: transform 0.15s ease, box-shadow 0.15s ease, opacity 0.15s ease; /* Faster transitions */
	width: calc(100% - 8px);
	height: 44px; /* Fixed height for better virtualization */
	overflow: hidden;
	text-overflow: ellipsis;
	white-space: nowrap;
	margin: 4px;
	transform-origin: center;
	position: absolute;
	left: 0;
	right: 0;
	backface-visibility: hidden; /* Prevent flickering during transforms */
	display: flex;
	align-items: center;
	font-size: 14px;
	color: #172b4d;
	z-index: 1; /* Ensure items appear above the droppable area */
	will-change: transform, opacity; /* Optimize for animations */
	border: 1px solid rgba(0, 0, 0, 0.05);
}

.draggable-item:hover {
	box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
	transform: translateY(-1px);
	border-color: rgba(0, 121, 191, 0.2);
}

/* Animation for items moving up/down */
.item-moving-up {
	transform: translateY(-100%) !important;
	transition: transform 0.3s ease !important;
}

.item-moving-down {
	transform: translateY(100%) !important;
	transition: transform 0.3s ease !important;
}

.item-inserted {
	animation: highlight-item 1s ease;
}

/* Pulse animation for placeholder */
@keyframes pulse {
	0% {
		box-shadow: 0 0 0 0 rgba(0, 120, 215, 0.4);
	}
	70% {
		box-shadow: 0 0 0 6px rgba(0, 120, 215, 0);
	}
	100% {
		box-shadow: 0 0 0 0 rgba(0, 120, 215, 0);
	}
}

/* Highlight animation for newly inserted items */
@keyframes highlight-item {
	0% {
		background-color: rgba(0, 120, 215, 0.2);
		border-color: rgba(0, 120, 215, 0.5);
	}
	100% {
		background-color: white;
		border-color: rgba(0, 0, 0, 0.05);
	}
}

.draggable-item:active {
	cursor: grabbing; /* Visual feedback when dragging */
	transform: scale(1.02);
	box-shadow: 0 3px 6px rgba(0, 0, 0, 0.15);
	border-color: rgba(0, 121, 191, 0.3);
}

.draggable-item.dragging {
	opacity: 0.7;
	box-shadow: 0 5px 10px rgba(0, 0, 0, 0.15);
}

.placeholder {
	background-color: rgba(0, 121, 191, 0.1);
	border: 2px dashed #0079bf;
	border-radius: 4px;
	margin-bottom: 8px;
	height: 44px; /* Same height as a typical list item + padding */
}

/* Animation for the dragging clone */
@keyframes pickup {
	0% {
		transform: scale(1) translateZ(0) rotate(0deg);
		box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);
	}
	50% {
		transform: scale(1.03) translateZ(0) translateY(-3px) rotate(0deg);
		box-shadow: 0 5px 10px rgba(0, 0, 0, 0.15);
	}
	100% {
		transform: scale(1.05) translateZ(0) translateY(-5px) rotate(0deg);
		box-shadow: 0 8px 15px rgba(0, 0, 0, 0.2);
	}
}

/* Animation for dropping an item */
@keyframes drop {
	0% {
		transform: scale(1.05) translateZ(0) translateY(-5px);
		box-shadow: 0 8px 15px rgba(0, 0, 0, 0.2);
		opacity: 0.95;
	}
	70% {
		transform: scale(1.02) translateZ(0) translateY(2px);
		box-shadow: 0 3px 6px rgba(0, 0, 0, 0.15);
		opacity: 0.9;
	}
	100% {
		transform: scale(1) translateZ(0) translateY(0);
		box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);
		opacity: 0.8;
	}
}

/* Animation for items moving to make space (upward) */
@keyframes moveUp {
	0% {
		transform: translateY(0);
	}
	100% {
		transform: translateY(-4px);
	}
}

/* Animation for items moving to make space (downward) */
@keyframes moveDown {
	0% {
		transform: translateY(0);
	}
	100% {
		transform: translateY(4px);
	}
}

/* Animation for item insertion */
@keyframes insertItem {
	0% {
		opacity: 0.6;
		transform: translateX(-10px);
	}
	100% {
		opacity: 1;
		transform: translateX(0);
	}
}

/* Apply animation to dragging clone */
#dragging-clone {
	animation: pickup 0.15s ease forwards;
	transform-origin: center;
	pointer-events: none;
	backface-visibility: hidden;
	will-change: transform;
	filter: drop-shadow(0 5px 10px rgba(0, 0, 0, 0.2));
}

/* Drop placeholder */
.drop-placeholder {
	height: 44px;
	background-color: rgba(0, 121, 191, 0.1);
	border: 2px dashed #0079bf;
	border-radius: 4px;
	margin: 4px;
	transition: all 0.2s ease;
	animation: pulse 1.5s infinite ease-in-out;
	position: relative;
	overflow: hidden;
}

/* Add a subtle shine effect to the placeholder */
.drop-placeholder::after {
	content: '';
	position: absolute;
	top: -50%;
	left: -50%;
	right: -50%;
	bottom: -50%;
	background: linear-gradient(to bottom right, rgba(255,255,255,0) 0%, rgba(255,255,255,0.2) 50%, rgba(255,255,255,0) 100%);
	transform: rotate(25deg);
	animation: shine 2s infinite ease-in-out;
}

@keyframes shine {
	0% {
		transform: translateX(-100%) rotate(25deg);
	}
	50% {
		transform: translateX(100%) rotate(25deg);
	}
	100% {
		transform: translateX(100%) rotate(25deg);
	}
}

/* Pulse animation for placeholder */
@keyframes pulse {
	0% {
		background-color: rgba(0, 121, 191, 0.1);
	}
	50% {
		background-color: rgba(0, 121, 191, 0.2);
	}
	100% {
		background-color: rgba(0, 121, 191, 0.1);
	}
}

/* Item moving animations - enhanced for better UX feel */
.item-moving-up {
	transform: translateY(-6px);
	transition: transform 0.25s cubic-bezier(0.2, 0.8, 0.2, 1);
	z-index: 1;
}

.item-moving-down {
	transform: translateY(6px);
	transition: transform 0.25s cubic-bezier(0.2, 0.8, 0.2, 1);
	z-index: 0;
}

/* Animation for newly inserted item */
.item-inserted {
	animation: insertItem 0.3s cubic-bezier(0.2, 0.8, 0.2, 1);
	z-index: 2;
	box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);
}

/* Define keyframes for insert animation */
@keyframes insertItem {
	0% {
		opacity: 0.7;
		transform: scale(0.95);
	}
	50% {
		opacity: 1;
		transform: scale(1.02);
	}
	100% {
		opacity: 1;
		transform: scale(1);
	}
}